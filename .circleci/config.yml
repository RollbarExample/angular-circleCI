version: 2.1

# List of jobs
orbs:
  rollbar: rollbar/deploy@1.0.1
jobs:
    # The build job
   
    build:
        working_directory: ~/project
        docker:
            - image: circleci/node:6.10-browsers
        steps:
            # Checkout the code from the branch into the working_directory
            - checkout
            # Log the current branch
            - run:
                name: Creating Dummy Artifacts
                command: |
                    echo "my artifact file" > /tmp/artifact-1;
                    mkdir /tmp/artifacts;
                    echo "my artifact files in a dir" > /tmp/artifacts/artifact-2;
            - store_artifacts:
                path: /tmp/artifact-1
                destination: artifact-file

            - store_artifacts:
                path: /tmp/artifacts
            - run:
                name: Show current branch
                command: echo ${CIRCLE_BRANCH}
            # Restore local dependencies from cache
            - restore_cache:
                keys:
                - v1-dependencies-{{ checksum "package.json" }}
                - v1-dependencies-
            # Install project dependencies
            - run:
                name: Install local dependencies
                command: npm install
            # Cache local dependencies if they don't exist
            - save_cache:
                key: v1-dependencies-{{ checksum "package.json" }}
                paths:
                    - node_modules
            # Lint the source code
            - run:
                name: Linting
                command: npm run lint
            # Test the source code
           
            # Build project with different configuration based on
            # the current branch
            - run:
                name: Building
                command: |
                    if [ "${CIRCLE_BRANCH}" == "staging" ]; then
                        npm run build-qa
                    elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                        npm run build.prod
                    else
                        npm run build-dev
                    fi
          
            # Cache the dist folder for the deploy job
            - save_cache:
                key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                    - dist
            - run:
                name: Print build log
                command: |
                    cd ./dist && find -type f -iname "main*.map" && cd ..
                    #curl https://circleci.com/api/v1.1/project/:github/:RollbarExample/:angular-circleCIrecent-builds?circle-token=83929420ac8669d080cb9a20e610972312b18554
     # The deploy job
    #  run os cmd to get directory list
    #main
    deploy:
        working_directory: ~/project
        docker:
            - image: circleci/node:6.10-browsers
       
        steps:
            # Log the current branch
            - checkout
            - rollbar/notify_deploy_started:
                environment: $ROLLBAR_ENVIRONMENT
            
            - run:
                name: Show current branch
                command: echo ${CIRCLE_BRANCH}
            # Restore cache from the build job which contains the
            # dist folder that needs to be deployed

            - restore_cache:
                key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            
            # Install AWS cli
            - run:
                name: Install aws cli
                command:
                    sudo apt-get -y -qq install awscli
            # Set the signature version for the S3 auth
            - run:
                name: Setting Signature Version 4 for S3 Request Authentication
                command: aws configure set default.s3.signature_version s3v4
            - rollbar/upload_sourcemap:
                minified_url: https://s3.us-east-2.amazonaws.com/rollbar-example/main.bundle.js
                #source_map: ./dist/main.[checksum].bundle.js.map
               # source_map: ./dist/"main*/*.bundle.js.map"
                source_map: ./dist/main.bundle.js.map
                js_files: ./src/main.ts
            # Deploy to the S3 bucket corresponding to the current branch
            - run:
                name: Deploy to S3
                command: |
                   # curl https://api.rollbar.com/api/1/sourcemap/ \
                   #     -F access_token=2a208f30fa1b4f0183adb694c4432038 \
                   #     -F version=$CIRCLE_SHA1 \
                   #     -F minified_url=https://s3.us-east-2.amazonaws.com/rollbar-example/main.[hash].bundle.js \
                   #     -F source_map=./dist \
                   #     -F main.ts=./src/main.ts

                        

                    if [ "${CIRCLE_BRANCH}" == "develop" ]; then
                        aws --region us-east-2 s3 sync dist s3://rollbar-example/ --delete --acl public-read
                    elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
                        aws --region us-east-2 s3 sync dist s3://rollbar-example/ --delete --acl public-read
                    elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                        aws --region us-east-2 s3 sync dist s3://rollbar-example/ --delete --acl public-read   
                    #aws s3 cp dist s3://rollbar-example --recursive --acl public-read
                    fi
                    # Notify to rollbar 
            - run:
                name: Show current branch
                command: echo ${CIRCLE_BUILD_NUM}
            - rollbar/notify_deploy_finished:
                deploy_id: $ROLLBAR_DEPLOY_ID
                status: succeeded
   

workflows:
    version: 2.1
    "Hello Workflow":
    # The build and deploy workflow
        jobs:
            - build
                # The deploy job will only run on the filtered branches and
                # require the build job to be successful before it starts
            - deploy:
                requires:
                    - build
                filters:
                    branches:
                        only:
                            - develop
                            - staging
                            - master